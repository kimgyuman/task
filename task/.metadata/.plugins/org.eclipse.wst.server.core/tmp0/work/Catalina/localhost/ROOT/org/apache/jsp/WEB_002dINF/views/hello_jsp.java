/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-07-15 08:01:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class hello_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/web/task/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/task02/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1657586856586L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"ko\" class=\"h-100\">\r\n");
      out.write("<head>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link rel=\"canonical\" href=\"https://getbootstrap.kr/docs/5.1/examples/cover/\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap core CSS -->\r\n");
      out.write("    <link href=\"/docs/5.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("    <!-- Favicons -->\r\n");
      out.write("    <link rel=\"apple-touch-icon\" href=\"/docs/5.1/assets/img/favicons/apple-touch-icon.png\" sizes=\"180x180\">\r\n");
      out.write("    <link rel=\"icon\" href=\"/docs/5.1/assets/img/favicons/favicon-32x32.png\" sizes=\"32x32\" type=\"image/png\">\r\n");
      out.write("    <link rel=\"icon\" href=\"/docs/5.1/assets/img/favicons/favicon-16x16.png\" sizes=\"16x16\" type=\"image/png\">\r\n");
      out.write("    <link rel=\"manifest\" href=\"/docs/5.1/assets/img/favicons/manifest.json\">\r\n");
      out.write("    <link rel=\"mask-icon\" href=\"/docs/5.1/assets/img/favicons/safari-pinned-tab.svg\" color=\"#7952b3\">\r\n");
      out.write("    <link rel=\"icon\" href=\"/docs/5.1/assets/img/favicons/favicon.ico\">\r\n");
      out.write("    <meta name=\"theme-color\" content=\"#7952b3\">\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        .bd-placeholder-img {\r\n");
      out.write("            font-size: 1.125rem;\r\n");
      out.write("            text-anchor: middle;\r\n");
      out.write("            -webkit-user-select: none;\r\n");
      out.write("            -moz-user-select: none;\r\n");
      out.write("            user-select: none;\r\n");
      out.write("        }\r\n");
      out.write("        @media (min-width: 1400px) {\r\n");
      out.write("            .bd-placeholder-img-lg {\r\n");
      out.write("                font-size: 3.5rem;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        document.addEventListener(\"DOMContentLoaded\", function() {\r\n");
      out.write("            realTimer();    // 시간을 딜레이 없이 나타내기위한 선 실행\r\n");
      out.write("            setInterval(realTimer, 500);    // 이후 0.5초에 한번씩 시간을 갱신한다.\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 시간을 출력\r\n");
      out.write("        function realTimer() {\r\n");
      out.write("            const nowDate = new Date();\r\n");
      out.write("            const year = nowDate.getFullYear();\r\n");
      out.write("            const month= nowDate.getMonth() + 1;\r\n");
      out.write("            const date = nowDate.getDate();\r\n");
      out.write("            const hour = nowDate.getHours();\r\n");
      out.write("            const min = nowDate.getMinutes();\r\n");
      out.write("            const sec = nowDate.getSeconds();\r\n");
      out.write("            const hi = msg(hour);\r\n");
      out.write("\r\n");
      out.write("            document.getElementById(\"times\").innerHTML = hi;\r\n");
      out.write("            document.getElementById(\"nowTimes\").innerHTML = year + \"-\" + addzero(month) + \"-\" + addzero(date) + \"&nbsp;\" + hour + \":\" + addzero(min) + \":\" + addzero(sec);\r\n");
      out.write("        } // 1자리수의 숫자인 경우 앞에 0을 붙여준다.\r\n");
      out.write("\r\n");
      out.write("        function addzero(num) {\r\n");
      out.write("            if(num < 10) { num = \"0\" + num; }\r\n");
      out.write("            return num;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function msg(result){\r\n");
      out.write("            if(result < 12){\r\n");
      out.write("                result = '좋은 아침!';\r\n");
      out.write("            } else if(result < 18){\r\n");
      out.write("                result= '활기찬 오후!';\r\n");
      out.write("            } else { result = '잘 자요!'; }\r\n");
      out.write("            return result;\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Custom styles for this template -->\r\n");
      out.write("    <link href=\"cover.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"d-flex h-100 text-center text-white bg-dark\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"cover-container d-flex w-50 h-100 p-3 mx-auto flex-column\" align=\"left\">\r\n");
      out.write("    <header class=\"mb-auto\">\r\n");
      out.write("        <div>\r\n");
      out.write("            <h3 class=\"float-md-start mb-0\">CRIZEN SOLUTION</h3>\r\n");
      out.write("            <!--<nav class=\"nav nav-masthead justify-content-center float-md-end\">\r\n");
      out.write("              <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n");
      out.write("              <a class=\"nav-link\" href=\"#\">Features</a>\r\n");
      out.write("              <a class=\"nav-link\" href=\"#\">Contact</a>\r\n");
      out.write("            </nav> -->\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"px-3\" >\r\n");
      out.write("        <div><h1><span id=times></span></h1></div>\r\n");
      out.write("\r\n");
      out.write("        <div><p class=\"lead\">현재 시간은 <span id=\"nowTimes\"></span> 입니다.</p></div>\r\n");
      out.write("        <div><p class=\"lead\">\r\n");
      out.write("            <a href=\"#\" onclick=\"window.open('https://www.naver.com')\" class=\"btn btn-lg btn-secondary fw-bold border-white bg-white\" style = \"color:black\">Learn more</a>\r\n");
      out.write("        </p></div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <footer class=\"mt-auto text-white-50\">\r\n");
      out.write("        <p>Cover template for <a href=\"https://getbootstrap.com/\" class=\"text-white\">Bootstrap</a>, by <a href=\"https://twitter.com/mdo\" class=\"text-white\">@mdo</a>.</p>\r\n");
      out.write("    </footer>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
